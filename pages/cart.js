import { HeartIcon, ShoppingCartIcon, XMarkIcon } from '@heroicons/react/24/outline'
import Head from 'next/head'
import React, { useState } from 'react'
import All from '../components/All'
import Footer from '../components/Footer'
import GreatDeals from '../components/GreatDeals'
import Header from '../components/Header'
import { computing } from '../utiles/data'
import { useRouter } from "next/router"
import { selectTotal, selectItems, addToCart, removeFromCart, increaseCount, decreaseCount } from "../slices/cartSlice.js"
import { useSelector, useDispatch } from "react-redux"
import Image from "next/image"

const Cart = () => {
    const [openCatModal, setOpenCatModal] = useState(false)
    const [num, setNum] = useState(1)
    const dispatch = useDispatch()
    const items = useSelector(selectItems)
    const total = useSelector(selectTotal)
    const cart = useSelector(state => state.cart)
    // const numbers = useSelector(selectNums)

    console.log({items})
    console.log({cart})
    // console.log({carts})
    console.log({total})
    const handleAll = () => {
        setOpenCatModal(prev => !prev)
    }
    const router = useRouter()
    // const handleClick = (sign) => {
    //     const { photo, title, disc, desc, id:_id, price, num } = items
    //     // const product = { _id, title, price,  photo }
    // 	if (sign === "add") {
    // 		setNum(num + 1)
    //         dispatch(addToCart({ photo, title, disc, dec, id, price, disc }))
    // 	} else {
    // 		setNum(num - 1)
    //         dispatch(removeFromCart({num, id, title, price, desc, disc, photo}))
    // 	}
    // }
    // const nums = [1, 2, 3, 5, 2, 8, 9, 2]
    // console.log(nums.reduce((total,x) => (x==2 ? total+1 : total), 0))
    // const dupe = nums.find(obj => obj === 2);
    // console.log(dupe)

    // const decCount = () => {
    //     const { id:_id } = items
    //     dispatch(decreaseCount({id}))
    // }
    // const inCount = () => {
    //     const { id:_id } = items
    //     dispatch(increaseCount({id}))
    // }
  return (
      <section className="head_section">
      <Head>
        <title>Wave | Online Shopping enjoy instant deliveries</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="main">
        {openCatModal && <All />}
        <Header setOpenCatModal={setOpenCatModal} handleAll={handleAll} />
      	
        {/*</div>*/}
        <div className="grid grid-cols-12 px-4 lg:px-20 gap-4 my-4">
        	<div className="col-span-12 lg:col-span-8 flex flex-col gap-y-4 rounded-sm bg-white p-4">
        		<p className="text-sm font-semibold text-gray-800 my-4">You have {cart.items.length} products in your Cart</p>
                {cart.items.length == 0 ? 
                    <div className="h-[80vh] w-full flex flex-col space-y-3 px-20 my-8 mx-auto justify-center items-center">
                        <span className="h-44 w-44">
                        <img src="https://sky.garden/assets/cart-empty.png" alt="" className="w-full h-full object-contain" />
                        </span>
                        <p className="text-sm font-normal text-gray-800">Already have an account? <span onClick={() => router.push("/register")} className="text-sm text-orange-400 cursor-pointer hover:text-orange-500 transition delay-200">Login</span> to see items in you cart</p>
                        <button onClick={() => router.push("/")} className="bg-orange-400 text-sm text-white font-normal px-4 py-2 w-1/5 rounded-sm hover:bg-orange-500 bg-orange-400 transition delay">Start Shopping</button>
                    </div>
                     : 
                    cart.items.map((item, i) => (
                        <div key={i} className="cart_div">
                        <div className="flex space-x-4 items-center">
                            {/*<img onClick={() => router.push(`product/${item._id}`)} src={item.photo} alt="img_prop" className=" " />*/}
                            <span onClick={() => router.push(`/product/${item._id}`)}  className="h-28 w-28 object-contain cursor-pointer relative">
                                <Image src={item.photo} alt="alt_image" layout="fill" className="img_tag object-contain"/>
                            </span>
                            <span onClick={() => dispatch(removeFromCart({ id: item._id }))} className="cart_icon">
                                <XMarkIcon className="h-6 w-6 text-white" />
                            </span>
                            <div className="flex flex-col space-y-2 mb-3 w-full">
                                <p className="cart_title truncate">{item.title.length > 40 ? `${item.title.substring(0, 60)}...` : item.title}</p>
                                <p className="text-sm font-normal text-gray-600">Seller: Deals Duka</p>
                                {/*<span className="flex items-center justify-between w-full">
                                    <span className="flex items-center">
                                        <button onClick={() => handleClick("sub")} disabled={num <= 1} className="cart_button rounded-tl-md rounded-bl-md cursor-pointer">-</button>
                                        <span className="cart_span">{cart.quantity}</span>
                                        <button onClick={() => handleClick("add")} className="cart_button rounded-tr-md rounded-br-md cursor-pointer">+</button>
                                    </span>
                                    <p className="text-sm font-semilbold text-gray-500">KSH: {item.price}</p>
                                </span>*/}
                            </div>
                            </div>
                        {/*butttons*/}
                            <span className="flex items-center justify-between w-full">
                                <span className="flex items-center">
                                    <button onClick={() => setNum(Math.max(num -1, 1))} className="cart_button rounded-tl-md rounded-bl-md cursor-pointer">-</button>
                                    <span className="cart_span">{num}</span>
                                    <button onClick={() => setNum(num + 1)} className="cart_button rounded-tr-md rounded-br-md cursor-pointer">+</button>
                                </span>
                                <p className="text-sm font-semilbold text-gray-500">KSH: {item.price}</p>
                            </span> 
                        </div>
                    ))}
        	</div>
        	<div className="cart_summary">
        		<p className="text-sm font-semibold text-gray-800 my-4">Your Order Summary</p>
        		<div className="flex items-center justify-between">
        			<span className="flex flex-col space-y-2">
        				<p className="text-sm font-bold text-gray-800">Sub total</p>
        				<p className="text-sm font-semibold text-gray-800">Delivery</p>
        			</span>
        			<span className="flex flex-col space-y-2">
        				<p className="text-sm font-bold text-gray-800">KSH. {total}</p>
        				<p className="text-sm font-semibold text-italics text-gray-500">Dependent on location</p>
        			</span>
        		</div>
        		<div className="flex justify-center items-center my-4 space-x-3 items-center">
        			<img src="https://sky.garden/assets/payments/mpesa1.png" alt="" className="payment_img"/>
        			<img src="https://sky.garden/assets/payments/airtel_money.png" alt="" className="payment_img"/>
        			<img src="https://sky.garden/assets/payments/Mastercard2.png" alt="" className="payment_img"/>
        			<img src="https://sky.garden/assets/checkout/visa.png" alt="" className="payment_img"/>
        		</div>
        		<button onClick={() => router.push('/checkout/checkout_id')} disabled={items.length == 0} className="checkout_btn">Check Out</button>
        		<p className="text-sm font-normal text-gray-800 my-4">Got a <span className="text-sm cursor-pointer text-orange-400 font-normal">promo or a discount</span> code?  We've got you covered</p>
        	</div>
        </div>
      </main>
      <Footer />
    </section>
  )
}

export default Cart